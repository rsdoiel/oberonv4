%!PS-Adobe-3.0
%%Title: (Reference Card)
%%Creator: (WriteNow 4.0.2: LaserWriter 8 8.2)
%%CreationDate: (5:03 PM Monday, 1 April 1996)
%%For: (Hanspeter M\232ssenb\232ck)
%%Pages: 2
%%DocumentFonts: Times-Roman Times-Bold Times-Italic
%%DocumentNeededFonts: Times-Roman Times-Bold Times-Italic
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Landscape
%%DocumentMedia: Default 842 595 0 () ()
%ADO_ImageableArea: 23 17 820 577
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(Reference Card)def
/Creator(WriteNow 4.0.2: LaserWriter 8 8.2)def
/CreationDate(5:03 PM Monday, 1 April 1996)def
/For(Hanspeter M\232ssenb\232ck)def
/Pages 1 def
end def end
/md 179 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
level2 startnoload
%%BeginFile: adobe_psp_patterns_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop true
}{
false
}ifelse
}{
false
}ifelse
}{
false
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_patterns_level2
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageRegion A4
level2 { 
		2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice
	}{
		/a4 where {pop a4}{a4R} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(Hanspeter M\232ssenb\232ck)setjob
countdictstack[{/currentdistillerparams where{pop 1 dict dup/Orientation 1 put setpagedevice}if}featurecleanup
/mT 90 $m rotate[1 0 0 -1 577 819]matrix concatmatrix def/por F def
initQDpatterns
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
/f0_1/Times-Roman
:mre
/f0_36 f0_1 36 scf
/f0_24 f0_1 24 scf
/f0_12 f0_1 12 scf
/f0_9 f0_1 9 scf
/f0_6 f0_1 6 scf
/f1_1/Times-Bold
:mre
/f1_14 f1_1 14 scf
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Times-Italic
:mre
/f2_9 f2_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Hanspeter M\232ssenb\232ck; page: 1 of 2)setjob
%%EndPageSetup
gS 0 0 797 560 rC
.25 lw
17 27 230 47 rC
17.5 28.5 57 45 rS
-.25 -.25 53.25 73.25 .25 .25 53 28 @b
53 28 22 4 rF
53.5 28.5 21 3 rS
53 43 22 4 rF
53.5 43.5 21 3 rS
53 58 22 4 rF
53.5 58.5 21 3 rS
17 28 37 4 rF
17.5 28.5 36 3 rS
17 49 37 4 rF
17.5 49.5 36 3 rS
np 29 67 :M
29 61 :L
35 61 :L
33 63 :L
36 66 :L
34 68 :L
31 65 :L
29 67 :L
eofill
-.25 -.25 29.25 67.25 .25 .25 29 61 @b
29 61.25 -.25 .25 35.25 61 .25 29 61 @a
-.25 -.25 33.25 63.25 .25 .25 35 61 @b
33 63.25 -.25 .25 36.25 66 .25 33 63 @a
-.25 -.25 34.25 68.25 .25 .25 36 66 @b
31 65.25 -.25 .25 34.25 68 .25 31 65 @a
-.25 -.25 29.25 67.25 .25 .25 31 65 @b
86 46 :M
f0_24 sf
.169 .017(Oberon System)J
87 67 :M
f1_14 sf
3.724 .372(Reference Card)J
198 67 :M
f0_9 sf
.563 .056(\(Aug. 95\))J
gR
gS 257 27 280 519 rC
297 36 :M
f1_12 sf
(Viewer Menu Buttons)S
410 36 :M
f0_9 sf
( \(activate with MM or Ctrl\))S
gR
gS 537 27 260 519 rC
577 35 :M
f1_9 sf
(System.Free)S
f0_9 sf
(  {modulename[*]} ~ | ^)S
588 45 :M
(Unloads the specified modules. If a module is)S
gR
gS 296 39 221 9 rC
296 43.25 -.25 .25 517.25 43 .25 296 43 @a
gR
gS 537 27 260 519 rC
588 55 :M
f0_9 sf
(immediately followed by an asterisk, imported modules)S
gR
:a
36<3049883AB59CF039><3030304949498888883A3A3AB5B5B59C9C9CF0F0F0393939>fg null
:b
gS 297 50 28 11 rC
0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>fg null
:b
108 -211 :M
%%DSIDICT:_cv
userdict /_cv known not currentdict /bu known and{bu}{save}ifelse
userdict /_cv known not dup {userdict /_cv 20 dict put}if
_cv begin
/bdf{bind def}bind def
/isDeviceColor {/currentcolorspace where{pop currentcolorspace 0 get dup /DeviceGray eq exch dup /DeviceRGB eq exch /DeviceCMYK eq or or}{T}ifelse}bdf
/setcmykcolor where{/setcmykcolor get /cvcmyk exch def}{/cvcmyk{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf }ifelse
/stg{isDeviceColor {cf ca /cs load setscreen setgray}{pop}ifelse}bdf
/strgb{isDeviceColor {cf ca /cs load setscreen setrgbcolor}{pop pop pop}ifelse}bdf
/stcmyk{isDeviceColor {cf ca /cs load setscreen cvcmyk}{pop pop pop pop}ifelse}bdf
/min1{dup 0 eq{pop 1}if}bdf
currentscreen/cs exch def/ca exch def/cf exch def
end
currentdict /bn known and{bn}{restore}ifelse
:e
1 .8 .6 :F
108 -211 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
108 -211 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
297 50 28 10 rF
0 G
108 -211 :M
0      userdict /_cv known {_cv begin stg end}{pop}ifelse
.25 lw
297.5 50.5 27 9 rS
1 G
108 -211 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:a
64<0000000000000000><000000000000000000000000000000000000000000000000>fg null
:b
108 -211 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:e
gS
.248 .244 scale
1251.679 223.195 :T
-1251.679 -223.195 :T
1206.679 233.195 :M
0 G
f0_36 sf
(C)S
gR
gS
.248 .244 scale
1251.679 223.195 :T
-1251.679 -223.195 :T
1230.894 233.195 :M
0 G
f0_36 sf
(l)S
gR
gS
.248 .244 scale
1251.679 223.195 :T
-1251.679 -223.195 :T
1243.001 233.195 :M
0 G
f0_36 sf
(o)S
gR
gS
.248 .244 scale
1251.679 223.195 :T
-1251.679 -223.195 :T
1263.179 233.195 :M
0 G
f0_36 sf
(s)S
gR
gS
.248 .244 scale
1251.679 223.195 :T
-1251.679 -223.195 :T
1279.322 233.195 :M
0 G
f0_36 sf
(e)S
gR
gR
:e
gS 257 27 280 519 rC
342 61 :M
0 G
f0_9 sf
(Closes the viewer.)S
gR
gS 537 27 260 519 rC
588 65 :M
0 G
f0_9 sf
(are also unloaded. Don't forget the ~!)S
gR
:a
36<3049883AB59CF039><3030304949498888883A3A3AB5B5B59C9C9CF0F0F0393939>fg null
:b
gS 297 63 28 11 rC
0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>fg null
:b
108 -198 :M
%%DSIDICT:_cv
userdict /_cv known not currentdict /bu known and{bu}{save}ifelse
userdict /_cv known not dup {userdict /_cv 20 dict put}if
_cv begin
/bdf{bind def}bind def
/isDeviceColor {/currentcolorspace where{pop currentcolorspace 0 get dup /DeviceGray eq exch dup /DeviceRGB eq exch /DeviceCMYK eq or or}{T}ifelse}bdf
/setcmykcolor where{/setcmykcolor get /cvcmyk exch def}{/cvcmyk{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf }ifelse
/stg{isDeviceColor {cf ca /cs load setscreen setgray}{pop}ifelse}bdf
/strgb{isDeviceColor {cf ca /cs load setscreen setrgbcolor}{pop pop pop}ifelse}bdf
/stcmyk{isDeviceColor {cf ca /cs load setscreen cvcmyk}{pop pop pop pop}ifelse}bdf
/min1{dup 0 eq{pop 1}if}bdf
currentscreen/cs exch def/ca exch def/cf exch def
end
currentdict /bn known and{bn}{restore}ifelse
:e
1 .8 .6 :F
108 -198 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
108 -198 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
297 63 28 10 rF
0 G
108 -198 :M
0      userdict /_cv known {_cv begin stg end}{pop}ifelse
.25 lw
297.5 63.5 27 9 rS
1 G
108 -198 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:a
64<0000000000000000><000000000000000000000000000000000000000000000000>fg null
:b
108 -198 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:e
gS
.248 .244 scale
1247.679 276.38 :T
-1247.679 -276.38 :T
1206.679 286.38 :M
0 G
f0_36 sf
(Gr)S
gR
gS
.248 .244 scale
1247.679 276.38 :T
-1247.679 -276.38 :T
1243.001 286.38 :M
0 G
f0_36 sf
(ow)S
gR
gR
:e
gS 257 27 280 519 rC
342 74 :M
0 G
f0_9 sf
(Expands the viewer to screen size. Can be)S
gR
gS 537 27 260 519 rC
577 75 :M
0 G
f1_9 sf
(System.State)S
f0_9 sf
(  {modulename} ~ | ^)S
gR
gS 257 27 280 519 rC
342 84 :M
0 G
f0_9 sf
(reverted with the Close button.)S
gR
gS 537 27 260 519 rC
588 85 :M
0 G
f0_9 sf
(Displays the global data of the specified modules.)S
gR
:a
36<3049883AB59CF039><3030304949498888883A3A3AB5B5B59C9C9CF0F0F0393939>fg null
:b
gS 297 86 28 11 rC
0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>fg null
:b
108 -175 :M
%%DSIDICT:_cv
userdict /_cv known not currentdict /bu known and{bu}{save}ifelse
userdict /_cv known not dup {userdict /_cv 20 dict put}if
_cv begin
/bdf{bind def}bind def
/isDeviceColor {/currentcolorspace where{pop currentcolorspace 0 get dup /DeviceGray eq exch dup /DeviceRGB eq exch /DeviceCMYK eq or or}{T}ifelse}bdf
/setcmykcolor where{/setcmykcolor get /cvcmyk exch def}{/cvcmyk{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf }ifelse
/stg{isDeviceColor {cf ca /cs load setscreen setgray}{pop}ifelse}bdf
/strgb{isDeviceColor {cf ca /cs load setscreen setrgbcolor}{pop pop pop}ifelse}bdf
/stcmyk{isDeviceColor {cf ca /cs load setscreen cvcmyk}{pop pop pop pop}ifelse}bdf
/min1{dup 0 eq{pop 1}if}bdf
currentscreen/cs exch def/ca exch def/cf exch def
end
currentdict /bn known and{bn}{restore}ifelse
:e
1 .8 .6 :F
108 -175 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
108 -175 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
297 86 28 10 rF
0 G
108 -175 :M
0      userdict /_cv known {_cv begin stg end}{pop}ifelse
.25 lw
297.5 86.5 27 9 rS
1 G
108 -175 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:a
64<0000000000000000><000000000000000000000000000000000000000000000000>fg null
:b
108 -175 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:e
gS
.248 .244 scale
1249.679 370.476 :T
-1249.679 -370.476 :T
1206.679 380.476 :M
0 G
f0_36 sf
(C)S
gR
gS
.248 .244 scale
1249.679 370.476 :T
-1249.679 -370.476 :T
1230.894 380.476 :M
0 G
f0_36 sf
(o)S
gR
gS
.248 .244 scale
1249.679 370.476 :T
-1249.679 -370.476 :T
1251.072 380.476 :M
0 G
f0_36 sf
(p)S
gR
gS
.248 .244 scale
1249.679 370.476 :T
-1249.679 -370.476 :T
1271.251 380.476 :M
0 G
f0_36 sf
(y)S
gR
gR
:e
gS 257 27 280 519 rC
342 97 :M
0 G
f0_9 sf
(Makes a copy of the viewer \(same contents\).)S
:a
36<3049883AB59CF039><3030304949498888883A3A3AB5B5B59C9C9CF0F0F0393939>fg null
:b
297 99 35 11 rC
0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>fg null
:b
110 -162 :M
%%DSIDICT:_cv
userdict /_cv known not currentdict /bu known and{bu}{save}ifelse
userdict /_cv known not dup {userdict /_cv 20 dict put}if
_cv begin
/bdf{bind def}bind def
/isDeviceColor {/currentcolorspace where{pop currentcolorspace 0 get dup /DeviceGray eq exch dup /DeviceRGB eq exch /DeviceCMYK eq or or}{T}ifelse}bdf
/setcmykcolor where{/setcmykcolor get /cvcmyk exch def}{/cvcmyk{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf }ifelse
/stg{isDeviceColor {cf ca /cs load setscreen setgray}{pop}ifelse}bdf
/strgb{isDeviceColor {cf ca /cs load setscreen setrgbcolor}{pop pop pop}ifelse}bdf
/stcmyk{isDeviceColor {cf ca /cs load setscreen cvcmyk}{pop pop pop pop}ifelse}bdf
/min1{dup 0 eq{pop 1}if}bdf
currentscreen/cs exch def/ca exch def/cf exch def
end
currentdict /bn known and{bn}{restore}ifelse
:e
1 .8 .6 :F
110 -162 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
110 -162 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
297 99 34 10 rF
0 G
110 -162 :M
0      userdict /_cv known {_cv begin stg end}{pop}ifelse
.25 lw
297.5 99.5 33 9 rS
1 G
110 -162 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:a
64<0000000000000000><000000000000000000000000000000000000000000000000>fg null
:b
110 -162 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:e
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1200.647 433.661 :M
0 G
f0_36 sf
(C)S
gR
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1224.821 433.661 :M
0 G
f0_36 sf
(o)S
gR
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1244.966 433.661 :M
0 G
f0_36 sf
(m)S
gR
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1273.17 433.661 :M
0 G
f0_36 sf
(p)S
gR
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1293.315 433.661 :M
0 G
f0_36 sf
(i)S
gR
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1305.402 433.661 :M
0 G
f0_36 sf
(l)S
gR
gS
.248 .244 scale
1267.647 423.661 :T
-1267.647 -423.661 :T
1317.489 433.661 :M
0 G
f0_36 sf
(e)S
gR
gR
gS 257 27 280 519 rC
342 110 :M
0 G
f0_9 sf
(Compile the viewer's contents \(see Compiler\))S
gR
gS 537 27 260 519 rC
576 116 :M
0 G
f1_12 sf
(Edit)S
f0_12 sf
(  )S
f0_9 sf
(\(see also Edit.Guide.Text\))S
gR
:a
36<3049883AB59CF039><3030304949498888883A3A3AB5B5B59C9C9CF0F0F0393939>fg null
:b
gS 297 112 20 11 rC
0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>fg null
:b
107 -149 :M
%%DSIDICT:_cv
userdict /_cv known not currentdict /bu known and{bu}{save}ifelse
userdict /_cv known not dup {userdict /_cv 20 dict put}if
_cv begin
/bdf{bind def}bind def
/isDeviceColor {/currentcolorspace where{pop currentcolorspace 0 get dup /DeviceGray eq exch dup /DeviceRGB eq exch /DeviceCMYK eq or or}{T}ifelse}bdf
/setcmykcolor where{/setcmykcolor get /cvcmyk exch def}{/cvcmyk{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf }ifelse
/stg{isDeviceColor {cf ca /cs load setscreen setgray}{pop}ifelse}bdf
/strgb{isDeviceColor {cf ca /cs load setscreen setrgbcolor}{pop pop pop}ifelse}bdf
/stcmyk{isDeviceColor {cf ca /cs load setscreen cvcmyk}{pop pop pop pop}ifelse}bdf
/min1{dup 0 eq{pop 1}if}bdf
currentscreen/cs exch def/ca exch def/cf exch def
end
currentdict /bn known and{bn}{restore}ifelse
:e
1 .8 .6 :F
107 -149 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
107 -149 :M
1 0.8 0.6 userdict /_cv known{_cv begin strgb end}{pop pop pop}ifelse
297 112 20 10 rF
0 G
107 -149 :M
0      userdict /_cv known {_cv begin stg end}{pop}ifelse
.25 lw
297.5 112.5 19 9 rS
1 G
107 -149 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:a
64<0000000000000000><000000000000000000000000000000000000000000000000>fg null
:b
107 -149 :M
1      userdict /_cv known {_cv begin stg end}{pop}ifelse
:e
gS
.247 .244 scale
1242.005 476.846 :T
-1242.005 -476.846 :T
1211.005 486.846 :M
0 G
f0_36 sf
(Ed)S
gR
gS
.247 .244 scale
1242.005 476.846 :T
-1242.005 -476.846 :T
1251.506 486.846 :M
0 G
f0_36 sf
(it)S
gR
gR
:e
gS 257 27 280 519 rC
342 123 :M
0 G
f0_9 sf
(Commands of module Edit \(e.g. Edit.Store to)S
gR
0 G
gS 576 119 221 9 rC
576 123.25 -.25 .25 797.25 123 .25 576 123 @a
gR
gS 0 27 257 519 rC
16 131 :M
f1_12 sf
(Using a Three Button Mouse)S
gR
gS 257 27 280 519 rC
342 133 :M
f0_9 sf
(store the viewers's contents to a file\))S
gR
gS 537 27 260 519 rC
577 138 :M
f1_9 sf
(Edit.Open )S
f0_9 sf
(  filename | ^)S
gR
gS 16 134 221 9 rC
16 138.25 -.25 .25 237.25 138 .25 16 138 @a
gR
gS 537 27 260 519 rC
588 148 :M
f0_9 sf
(Opens the specified text file.)S
gR
.5 G
gS 17 145 26 8 rC
17 145 8 8 rF
0 G
17.5 145.5 7 7 rS
.25 lw
26.5 145.5 7 7 rS
35.5 145.5 7 7 rS
gR
gS 0 27 257 519 rC
70 153 :M
0 G
f0_9 sf
(ML: Sets the caret.)S
gR
gS 537 27 260 519 rC
576 158 :M
0 G
f1_9 sf
(Edit.Close)S
gR
0 G
.25 lw
gS 17 155 26 8 rC
17.5 155.5 7 7 rS
.5 G
26 155 8 8 rF
0 G
1 lw
26.5 155.5 7 7 rS
.25 lw
35.5 155.5 7 7 rS
gR
gS 0 27 257 519 rC
70 163 :M
f0_9 sf
(MM: Executes a command.)S
gR
gS 257 27 280 519 rC
297 164 :M
f1_12 sf
(Command Argument Conventions)S
gR
gS 537 27 260 519 rC
588 168 :M
f0_9 sf
(Closes the marked viewer containing the command in a)S
gR
gS 17 165 26 8 rC
17.5 165.5 7 7 rS
26.5 165.5 7 7 rS
.5 G
35 165 8 8 rF
0 G
1 lw
35.5 165.5 7 7 rS
gR
gS 0 27 257 519 rC
70 173 :M
f0_9 sf
(MR: Sets the selection.)S
gR
gS 296 167 221 9 rC
296 171.25 -.25 .25 517.25 171 .25 296 171 @a
gR
gS 537 27 260 519 rC
588 178 :M
f0_9 sf
(menu. Only if the text has been saved previously.)S
gR
.5 G
gS 17 175 26 8 rC
17 175 8 8 rF
0 G
1 lw
17.5 175.5 7 7 rS
.5 G
26 175 8 8 rF
0 G
26.5 175.5 7 7 rS
.5 G
35 175 8 8 rF
0 G
35.5 175.5 7 7 rS
gR
gS 0 27 257 519 rC
70 183 :M
0 G
f0_9 sf
(Cancels the current mouse click.)S
gR
gS 257 27 280 519 rC
297 186 :M
0 G
f0_9 sf
(name)S
342 186 :M
(The argument is the name following the)S
gR
gS 537 27 260 519 rC
577 188 :M
0 G
f1_9 sf
(Edit.Store)S
f0_9 sf
( )S
gR
gS 257 27 280 519 rC
342 196 :M
0 G
f0_9 sf
(command.)S
gR
gS 0 27 257 519 rC
70 198 :M
0 G
f2_9 sf
(Large selections:)S
f0_9 sf
( Execute System.Copy to get)S
gR
gS 537 27 260 519 rC
588 198 :M
0 G
f0_9 sf
(Stores the text in the viewer.)S
gR
gS 257 27 280 519 rC
297 206 :M
0 G
f0_9 sf
({name} ~)S
342 206 :M
(The arguments are the names following the)S
gR
gS 0 27 257 519 rC
70 208 :M
0 G
f0_9 sf
(a copy of your text viewer; select the beginning)S
gR
gS 537 27 260 519 rC
577 208 :M
0 G
f1_9 sf
(Edit.Print)S
616 208 :M
f0_9 sf
(  printer [%] \(* | {name} ~\))S
gR
gS 257 27 280 519 rC
342 216 :M
0 G
f0_9 sf
(command. The list is terminated with a ~.)S
gR
gS 0 27 257 519 rC
70 218 :M
0 G
f0_9 sf
(of the selection in the first viewer and the end)S
gR
gS 537 27 260 519 rC
588 218 :M
0 G
f0_9 sf
(Prints the specified text files on the printer. % selects)S
gR
gS 257 27 280 519 rC
297 226 :M
0 G
f0_9 sf
(^)S
342 226 :M
(The argument\(s\) are taken from the most recent)S
gR
gS 0 27 257 519 rC
70 228 :M
0 G
f0_9 sf
(of the selection in the second viewer.)S
gR
gS 537 27 260 519 rC
588 228 :M
0 G
f0_9 sf
(draft mode. If activated from a menu the text in the)S
gR
gS 257 27 280 519 rC
342 236 :M
0 G
f0_9 sf
(selection.)S
gR
gS 537 27 260 519 rC
588 238 :M
0 G
f0_9 sf
(viewer is printed.)S
gR
.875 G
gS 17 235 27 8 rC
18 235 8 8 rF
0 G
1 lw
18.5 235.5 7 7 rS
.25 lw
27.5 235.5 7 7 rS
.875 G
36 235 8 8 rF
0 G
1 lw
36.5 235.5 7 7 rS
38 241 :M
f0_6 sf
(1)S
20 241 :M
(2)S
gR
gS 0 27 257 519 rC
70 243 :M
0 G
f0_9 sf
(Deletes the selection.)S
gR
gS 257 27 280 519 rC
297 246 :M
0 G
f0_9 sf
(*)S
342 246 :M
(The argument is the text in the marked viewer.)S
gR
gS 537 27 260 519 rC
577 248 :M
0 G
f1_9 sf
(Edit.Search ^)S
gR
0 G
gS 17 245 26 8 rC
17.5 245.5 7 7 rS
.875 G
26 245 8 8 rF
0 G
1 lw
26.5 245.5 7 7 rS
.875 G
35 245 8 8 rF
0 G
35.5 245.5 7 7 rS
37 251 :M
f0_6 sf
(1)S
28 251 :M
(2)S
gR
gS 0 27 257 519 rC
70 253 :M
f0_9 sf
(Copies the selection to the caret position.)S
gR
gS 537 27 260 519 rC
588 258 :M
f0_9 sf
(Searches the selected text starting at the caret position.)S
gR
.875 G
gS 17 260 27 8 rC
18 260 8 8 rF
0 G
1 lw
18.5 260.5 7 7 rS
.875 G
27 260 8 8 rF
0 G
27.5 260.5 7 7 rS
.25 lw
36.5 260.5 7 7 rS
20 266 :M
f0_6 sf
(1)S
29 266 :M
(2)S
gR
gS 0 27 257 519 rC
70 268 :M
0 G
f0_9 sf
(Copies the selection to the caret position.)S
gR
gS 537 27 260 519 rC
588 268 :M
0 G
f0_9 sf
(Same as Serch button in the viewer menu.)S
gR
gS 257 27 280 519 rC
296 277 :M
0 G
f1_12 sf
(System)S
gR
gS 17 270 27 8 rC
18 270 8 8 rF
0 G
1 lw
18.5 270.5 7 7 rS
.25 lw
27.5 270.5 7 7 rS
.875 G
36 270 8 8 rF
0 G
1 lw
36.5 270.5 7 7 rS
20 276 :M
f0_6 sf
(1)S
38 276 :M
(2)S
gR
gS 0 27 257 519 rC
70 278 :M
0 G
f0_9 sf
(Copies font from the caret to the selection.)S
gR
gS 537 27 260 519 rC
577 278 :M
0 G
f1_9 sf
(Edit.Replace ^)S
gR
0 G
gS 296 280 221 9 rC
296 284.25 -.25 .25 517.25 284 .25 296 284 @a
gR
gS 537 27 260 519 rC
588 288 :M
f0_9 sf
(Replaces the pattern just found with Edit.Search by the)S
gR
.875 G
gS 17 285 27 8 rC
18 285 8 8 rF
0 G
1 lw
18.5 285.5 7 7 rS
.875 G
27 285 8 8 rF
0 G
27.5 285.5 7 7 rS
.25 lw
36.5 285.5 7 7 rS
29 291 :M
f0_6 sf
(1)S
20 291 :M
(2)S
gR
gS 0 27 257 519 rC
70 293 :M
0 G
f0_9 sf
(Executes a command, reloading its module )S
gR
gS 537 27 260 519 rC
588 298 :M
0 G
f0_9 sf
(selected text.)S
gR
gS 257 27 280 519 rC
297 299 :M
0 G
f1_9 sf
(System.Open)S
348 299 :M
f0_9 sf
(  filename | ^)S
gR
gS 0 27 257 519 rC
70 303 :M
0 G
f0_9 sf
(\(implicit System.Free\).)S
gR
gS 537 27 260 519 rC
577 308 :M
0 G
f1_9 sf
(Edit.ReplaceAll ^)S
gR
gS 257 27 280 519 rC
308 309 :M
0 G
f0_9 sf
(Opens the specified text file in the system track.)S
gR
gS 0 27 257 519 rC
17 319 :M
0 G
f2_9 sf
(In the title bar of a viewer:)S
gR
gS 537 27 260 519 rC
588 318 :M
0 G
f0_9 sf
(Replaces all occurrences of the pattern just found with)S
gR
gS 257 27 280 519 rC
297 319 :M
0 G
f1_9 sf
(System.Close)S
gR
gS 537 27 260 519 rC
588 328 :M
0 G
f0_9 sf
(Edit.Search by the selected text.)S
gR
.5 G
gS 17 321 26 8 rC
17 321 8 8 rF
0 G
1 lw
17.5 321.5 7 7 rS
.25 lw
26.5 321.5 7 7 rS
35.5 321.5 7 7 rS
gR
gS 0 27 257 519 rC
70 329 :M
0 G
f0_9 sf
(Moves the viewer up and down \(within track\).)S
gR
gS 257 27 280 519 rC
308 329 :M
0 G
f0_9 sf
(Closes the marked viewer or the viewer containing the)S
gR
gS 537 27 260 519 rC
577 338 :M
0 G
f1_9 sf
(Edit.Show)S
617 338 :M
f0_9 sf
(  module.objname | ^)S
gR
.875 G
gS 17 331 27 8 rC
18 331 8 8 rF
0 G
1 lw
18.5 331.5 7 7 rS
.875 G
27 331 8 8 rF
0 G
27.5 331.5 7 7 rS
.25 lw
36.5 331.5 7 7 rS
20 337 :M
f0_6 sf
(1)S
29 337 :M
(2)S
gR
gS 0 27 257 519 rC
44 339 :M
0 G
f0_9 sf
( )S
70 339 :M
(Moves the viewer also across tracks.)S
gR
gS 257 27 280 519 rC
308 339 :M
0 G
f0_9 sf
(command in a menu. Does not store its contents!)S
gR
gS 537 27 260 519 rC
588 348 :M
0 G
f0_9 sf
(Opens a viewer showing the declaration of the qualified)S
gR
gS 257 27 280 519 rC
297 349 :M
0 G
f1_9 sf
(System.Grow)S
gR
gS 537 27 260 519 rC
588 358 :M
0 G
f0_9 sf
(name specified as an argument.)S
gR
gS 257 27 280 519 rC
308 359 :M
0 G
f0_9 sf
(Enlarges the viewer containing the command. Undo the)S
gR
gS 537 27 260 519 rC
577 368 :M
0 G
f1_9 sf
(Edit.Recall)S
gR
gS 257 27 280 519 rC
308 369 :M
0 G
f0_9 sf
(action with System.Close.)S
gR
gS 0 27 257 519 rC
16 373 :M
0 G
f1_12 sf
(Using a One Button Mouse )S
157 373 :M
f0_9 sf
(\(see Mouse.Text\))S
gR
gS 537 27 260 519 rC
588 378 :M
0 G
f0_9 sf
(Inserts the most recently deleted text at the caret position.)S
gR
gS 257 27 280 519 rC
297 379 :M
0 G
f1_9 sf
(System.Copy)S
gR
0 G
gS 16 376 221 9 rC
16 380.25 -.25 .25 237.25 380 .25 16 380 @a
gR
gS 537 27 260 519 rC
577 388 :M
f1_9 sf
(Edit.Locate)S
622 388 :M
f0_9 sf
(  number | ^)S
gR
gS 257 27 280 519 rC
308 389 :M
f0_9 sf
(Opens a copy of the viewer \(showing the same data\).)S
gR
.5 G
gS 17 387 8 8 rC
17 387 8 8 rF
0 G
1 lw
17.5 387.5 7 7 rS
gR
gS 0 27 257 519 rC
70 395 :M
0 G
f0_9 sf
(Sets the caret and the selection.)S
gR
gS 537 27 260 519 rC
588 398 :M
0 G
f0_9 sf
(Sets the caret in the marked viewer to the character)S
gR
gS 257 27 280 519 rC
297 399 :M
0 G
f1_9 sf
(System.Quit)S
gR
gS 0 27 257 519 rC
17 405 :M
0 G
f1_9 sf
(Ctrl)S
70 405 :M
f0_9 sf
(Executes a command, activates a text element.)S
gR
gS 537 27 260 519 rC
588 408 :M
0 G
f0_9 sf
(position corresponding to the selected number.)S
gR
gS 257 27 280 519 rC
308 409 :M
0 G
f0_9 sf
(Irrevocably quits Oberon.)S
gR
gS 0 27 257 519 rC
17 415 :M
0 G
f1_9 sf
(Ctrl)S
33 415 :M
( + )S
.5 G
43 407 8 8 rC
43 407 8 8 rF
0 G
1 lw
43.5 407.5 7 7 rS
gR
gS 0 27 257 519 rC
70 415 :M
0 G
f0_9 sf
(Executes a command, reloading its module)S
gR
gS 257 27 280 519 rC
297 419 :M
0 G
f1_9 sf
(System.Directory )S
366 419 :M
f0_9 sf
( pattern[/d] | ^)S
gR
gS 0 27 257 519 rC
70 425 :M
0 G
f0_9 sf
(\(implicit System.Free\).)S
gR
gS 257 27 280 519 rC
308 429 :M
0 G
f0_9 sf
(Displays all files matching the pattern \(may contain)S
308 439 :M
(asterisks\). Option /d displays date and size.)S
gR
gS 0 27 257 519 rC
17 441 :M
0 G
f2_9 sf
(In the title bar of a viewer:)S
gR
gS 537 27 260 519 rC
576 441 :M
0 G
f1_12 sf
(Clipboard)S
629 441 :M
f0_9 sf
( \(commands are in the Edit button of viewers\))S
gR
gS 257 27 280 519 rC
297 449 :M
0 G
f1_9 sf
(System.CopyFiles)S
f0_9 sf
(  {src => dest} ~ | ^)S
gR
gS 17 443 8 8 rC
17 443 8 8 rF
0 G
1 lw
17.5 443.5 7 7 rS
gR
gS 0 27 257 519 rC
70 451 :M
0 G
f0_9 sf
(Moves the viewer up and down \(within track\).)S
gR
0 G
gS 576 444 221 9 rC
576 448.25 -.25 .25 797.25 448 .25 576 448 @a
gR
gS 257 27 280 519 rC
308 459 :M
f0_9 sf
(Copies a list of files.)S
gR
.5 G
gS 17 453 8 8 rC
17 453 8 8 rF
0 G
1 lw
17.5 453.5 7 7 rS
gR
gS 0 27 257 519 rC
25 461 :M
0 G
f1_9 sf
( + Ctrl)S
70 461 :M
f0_9 sf
(Moves the viewer also across tracks.)S
gR
gS 537 27 260 519 rC
577 463 :M
0 G
f1_9 sf
(Clipboard.Cut)S
gR
gS 257 27 280 519 rC
297 469 :M
0 G
f1_9 sf
(System.RenameFiles)S
f0_9 sf
(  {oldname => newname} ~ | ^)S
gR
gS 537 27 260 519 rC
588 473 :M
0 G
f0_9 sf
(Deletes the selection and copies it to the clipboard \(cmd-)S
gR
gS 257 27 280 519 rC
308 479 :M
0 G
f0_9 sf
(Renames a list of files.)S
gR
gS 537 27 260 519 rC
588 483 :M
0 G
f0_9 sf
(X on Mac, F5 on PC\).)S
gR
gS 257 27 280 519 rC
297 489 :M
0 G
f1_9 sf
(System.DeleteFiles)S
369 489 :M
f0_9 sf
(  {filename} ~ | ^)S
gR
gS 537 27 260 519 rC
577 493 :M
0 G
f1_9 sf
(Clipboard.Copy)S
gR
gS 0 27 257 519 rC
16 497 :M
0 G
f1_12 sf
(Special Keys)S
gR
gS 257 27 280 519 rC
308 499 :M
0 G
f0_9 sf
(Deletes a list of files. Don't forget the ~!)S
gR
gS 537 27 260 519 rC
588 503 :M
0 G
f0_9 sf
(Copies the selection to the clipboard \(cmd-C on Mac, F6)S
gR
0 G
gS 16 501 221 9 rC
16 505.25 -.25 .25 237.25 505 .25 16 505 @a
gR
gS 257 27 280 519 rC
297 510 :M
f1_9 sf
(System.Recall)S
gR
gS 537 27 260 519 rC
588 513 :M
f0_9 sf
(on PC\).)S
gR
gS 0 27 257 519 rC
17 521 :M
f1_9 sf
(F1)S
70 521 :M
f0_9 sf
(Marks the viewer at the mouse position \(PC\))S
gR
gS 257 27 280 519 rC
308 521 :M
f0_9 sf
(Reopens the most recently closed viewer.)S
gR
gS 537 27 260 519 rC
577 523 :M
f1_9 sf
(Clipboard.Paste)S
gR
gS 0 27 257 519 rC
17 532 :M
f1_9 sf
(ENTER)S
70 532 :M
f0_9 sf
(Marks the viewer at the mouse position \(Mac\))S
gR
gS 257 27 280 519 rC
297 532 :M
f1_9 sf
(System.ShowModules)S
gR
gS 537 27 260 519 rC
588 533 :M
f0_9 sf
(Copies the clipboard to the caret \(cmd-V on Mac, F7 on)S
gR
gS 0 27 257 519 rC
17 543 :M
f1_9 sf
(ESC)S
70 543 :M
f0_9 sf
(Removes the selection, caret and star-marker.)S
gR
gS 257 27 280 519 rC
308 543 :M
f0_9 sf
(Displays a list of all currently loaded modules. )S
gR
gS 537 27 260 519 rC
588 543 :M
f0_9 sf
(PC\).)S
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Hanspeter M\232ssenb\232ck; page: 2 of 2)setjob
%%EndPageSetup
gS 0 0 797 560 rC
0 26 257 521 rC
16 35 :M
f1_12 sf
(Compiler)S
65 35 :M
f0_9 sf
( \(commands in the Compile button of viewers\))S
gR
gS 257 26 280 521 rC
296 35 :M
f1_12 sf
(Sort)S
gR
gS 537 26 260 442 rC
577 34 :M
f1_9 sf
(ClockElems.Insert)S
f0_9 sf
( [size])S
588 44 :M
(Inserts a clock of the given size \(radius in mm\) at the)S
gR
gS 16 38 221 9 rC
16 42.25 -.25 .25 237.25 42 .25 16 42 @a
gR
gS 296 38 221 9 rC
296 42.25 -.25 .25 517.25 42 .25 296 42 @a
gR
gS 537 26 260 442 rC
588 54 :M
f0_9 sf
(caret position.)S
gR
gS 0 26 257 521 rC
17 57 :M
f1_9 sf
(Folds.Compile )S
75 57 :M
f0_9 sf
({filename} ~ | ^ | *)S
gR
gS 257 26 280 521 rC
297 57 :M
f1_9 sf
(Sort.Sort)S
f0_9 sf
( * | filename | ^)S
gR
gS 537 26 260 442 rC
577 64 :M
f1_9 sf
(IconElems.Insert)S
gR
gS 0 26 257 521 rC
28 67 :M
f0_9 sf
(Compiles the specified file\(s\). With * the marked text is)S
gR
gS 257 26 280 521 rC
308 67 :M
f0_9 sf
(Sorts lines and displays them in a new viewer. Options: )S
gR
gS 537 26 260 442 rC
588 74 :M
f0_9 sf
(Inserts a walking icon-man at the caret position.)S
gR
gS 0 26 257 521 rC
28 77 :M
f0_9 sf
(compiled. Inserts error symbols at the error positions.)S
gR
gS 257 26 280 521 rC
308 77 :M
f0_9 sf
(/r ... in reverse order, /e ... include empty lines, )S
gR
gS 0 26 257 521 rC
17 87 :M
f1_9 sf
(Folds.ShowError)S
gR
gS 257 26 280 521 rC
308 87 :M
f0_9 sf
(/u ... unique lines only)S
gR
gS 0 26 257 521 rC
28 97 :M
f0_9 sf
(Places the caret to the next error position and explains the)S
gR
gS 537 26 260 442 rC
576 107 :M
f1_12 sf
(Debug)S
f1_10 sf
( )S
612 107 :M
f0_9 sf
(\(see also Debug.Text\))S
gR
gS 0 26 257 521 rC
28 107 :M
f0_9 sf
(error in the Log viewer.)S
gR
gS 257 26 280 521 rC
296 110 :M
f1_12 sf
(Text-Elements)S
371 110 :M
f1_10 sf
( )S
374 110 :M
f0_9 sf
(\(see also Elem.Guide.Text\))S
gR
gS 576 111 221 9 rC
576 115.25 -.25 .25 797.25 115 .25 576 115 @a
gR
gS 296 113 221 9 rC
296 117.25 -.25 .25 517.25 117 .25 296 117 @a
gR
gS 537 26 260 442 rC
576 131 :M
f1_9 sf
(Debug.Trace )S
628 131 :M
f0_9 sf
({modulename} ~)S
gR
gS 257 26 280 521 rC
297 132 :M
f1_9 sf
(FoldElems.Insert ^)S
gR
gS 0 26 257 521 rC
16 140 :M
f1_12 sf
(Browser)S
gR
gS 257 26 280 521 rC
308 142 :M
f0_9 sf
(Inserts open fold elements around the most recent)S
gR
gS 537 26 260 442 rC
588 142 :M
f0_9 sf
(Prepares given modules for debugging. Start debugging)S
gR
gS 16 143 221 9 rC
16 147.25 -.25 .25 237.25 147 .25 16 147 @a
gR
gS 257 26 280 521 rC
308 152 :M
f0_9 sf
(selection. Folds can be collapsed and expanded with MM)S
gR
gS 537 26 260 442 rC
588 153 :M
f0_9 sf
(by executing a command of one of these modules.)S
gR
gS 0 26 257 521 rC
17 162 :M
f1_9 sf
(Browser.ShowDef)S
f0_9 sf
(  modulename | ^ )S
gR
gS 257 26 280 521 rC
308 162 :M
f0_9 sf
(\(or Ctrl\).)S
gR
gS 537 26 260 442 rC
576 164 :M
f1_9 sf
(Debug.Close)S
gR
gS 0 26 257 521 rC
28 172 :M
f0_9 sf
(Displays the interface of the specified \(selected\) module.)S
gR
gS 257 26 280 521 rC
297 172 :M
f1_9 sf
(FoldElems.InsertCollapsed ^)S
gR
gS 537 26 260 442 rC
588 175 :M
f0_9 sf
(Restores everything back to normal.)S
gR
gS 0 26 257 521 rC
17 182 :M
f1_9 sf
(Browser.ShowObj)S
88 182 :M
f0_9 sf
(  module.objname | ^)S
gR
gS 257 26 280 521 rC
308 182 :M
f0_9 sf
(Inserts closed fold elements around the most recent)S
gR
gS 537 26 260 442 rC
576 186 :M
f1_9 sf
(Debug.StepInto)S
gR
gS 0 26 257 521 rC
28 192 :M
f0_9 sf
(Displays the declaration of the specified qualified object)S
gR
gS 257 26 280 521 rC
308 192 :M
f0_9 sf
(selection.)S
gR
gS 537 26 260 442 rC
588 197 :M
f0_9 sf
(Executes one Oberon statement. Enters an eventually)S
gR
gS 0 26 257 521 rC
28 202 :M
f0_9 sf
(\(variable, type, constant, procedure\).)S
gR
gS 257 26 280 521 rC
297 202 :M
f1_9 sf
(FoldElems.Expand)S
gR
gS 537 26 260 442 rC
588 208 :M
f0_9 sf
(executed procedure.)S
gR
gS 257 26 280 521 rC
308 212 :M
f0_9 sf
(Expands all fold elements in the marked text or in the text)S
gR
gS 537 26 260 442 rC
576 219 :M
f1_9 sf
(Debug.Step)S
gR
gS 257 26 280 521 rC
308 222 :M
f0_9 sf
(that contains this command in the menu.)S
gR
gS 537 26 260 442 rC
588 230 :M
f0_9 sf
(Executes one Oberon statement. Steps over an eventually)S
gR
gS 257 26 280 521 rC
297 232 :M
f1_9 sf
(FoldElems.Collapse)S
gR
gS 0 26 257 521 rC
16 235 :M
f1_12 sf
(EditTools)S
gR
gS 537 26 260 442 rC
588 241 :M
f0_9 sf
(executed procedure.)S
gR
gS 257 26 280 521 rC
308 242 :M
f0_9 sf
(Collapses all fold elements in the marked text or in the)S
gR
gS 16 238 221 9 rC
16 242.25 -.25 .25 237.25 242 .25 16 242 @a
gR
gS 257 26 280 521 rC
308 252 :M
f0_9 sf
(text that contains this command in the menu.)S
gR
gS 537 26 260 442 rC
576 252 :M
f1_9 sf
(Debug.Run)S
gR
gS 0 26 257 521 rC
17 257 :M
f1_9 sf
(EditTools.Words)S
83 257 :M
f0_9 sf
( {filename} ~ | * | ^)S
gR
gS 257 26 280 521 rC
297 262 :M
f1_9 sf
(FoldElems.Search )S
369 262 :M
f0_9 sf
(pattern | ^)S
gR
gS 537 26 260 442 rC
588 263 :M
f0_9 sf
(Executes up to a user set breakpoint.)S
gR
gS 0 26 257 521 rC
28 267 :M
f0_9 sf
(Counts lines, words and characters in the specified)S
gR
gS 257 26 280 521 rC
308 272 :M
f0_9 sf
(Searches the selected pattern \(even in collapsed fold)S
gR
gS 537 26 260 442 rC
576 274 :M
f1_9 sf
(Debug.Data )S
624 274 :M
f0_9 sf
(\(module | module\323.\323procedure\))S
gR
gS 0 26 257 521 rC
28 277 :M
f0_9 sf
(text\(s\).)S
gR
gS 257 26 280 521 rC
308 282 :M
f0_9 sf
(elements\).)S
gR
gS 537 26 260 442 rC
588 285 :M
f0_9 sf
(Displays variables of either a module or a procedure.)S
gR
gS 0 26 257 521 rC
17 287 :M
f1_9 sf
(EditTools.RemoveElems)S
f0_9 sf
( *)S
gR
gS 257 26 280 521 rC
297 292 :M
f1_9 sf
(PopupElems.Insert)S
371 292 :M
f0_9 sf
( "<menuname>")S
gR
gS 537 26 260 442 rC
588 296 :M
f0_9 sf
(View is updated automatically with every step executed.)S
gR
gS 0 26 257 521 rC
28 297 :M
f0_9 sf
(Removes all text elements in the specified text.)S
gR
gS 257 26 280 521 rC
308 302 :M
f0_9 sf
(Inserts a popup menu at the caret. Popup menus can be)S
gR
gS 0 26 257 521 rC
17 307 :M
f1_9 sf
(EditTools.StoreAscii)S
gR
gS 537 26 260 442 rC
576 307 :M
f1_9 sf
(Debug.Stack)S
gR
gS 257 26 280 521 rC
308 312 :M
f0_9 sf
(opened with MM \(or Ctrl\). To edit them, click MM+MR)S
gR
gS 0 26 257 521 rC
28 317 :M
f0_9 sf
(Stores the contents of the marked text viewer \(or of the)S
gR
gS 537 26 260 442 rC
588 318 :M
f0_9 sf
(Displays all procedures on stack.)S
gR
gS 257 26 280 521 rC
308 322 :M
f0_9 sf
(\(or Ctrl+Alt\), add or remove commands and then execute)S
gR
gS 0 26 257 521 rC
28 327 :M
f0_9 sf
(viewer containing this command\) in plain ASCII form.)S
gR
gS 537 26 260 442 rC
576 329 :M
f1_9 sf
(Debug.PostMortem)S
gR
gS 257 26 280 521 rC
308 332 :M
f0_9 sf
(PopupElems.Update from the menu of the viewer.)S
gR
gS 537 26 260 442 rC
588 340 :M
f0_9 sf
(Starts the post mortem debugging facility.)S
gR
gS 257 26 280 521 rC
297 342 :M
f1_9 sf
(PopupElems.InsertMenu)S
f0_9 sf
( "<menuname>")S
308 352 :M
(Same as PopupElems.Insert but inserts a smaller menu)S
gR
gS 0 26 257 521 rC
16 360 :M
f1_12 sf
(Analyzer)S
gR
gS 257 26 280 521 rC
308 362 :M
f0_9 sf
(which fits into the menu bar of a viewer.)S
gR
gS 16 363 221 9 rC
16 367.25 -.25 .25 237.25 367 .25 16 367 @a
gR
gS 257 26 280 521 rC
297 372 :M
f1_9 sf
(FontElems.Insert)S
gR
gS 537 26 260 442 rC
576 374 :M
f1_12 sf
(AsciiCoder )S
f0_9 sf
(\(see also AsciiCoder.Tool\))S
gR
gS 0 26 257 521 rC
17 382 :M
f1_9 sf
(Analyzer.Analyze)S
f0_9 sf
( [*] [/ opt] | ^ | {name [/ opt]} ~)S
gR
gS 257 26 280 521 rC
308 382 :M
f0_9 sf
(Inserts a popup menu which may contain different font)S
gR
gS 576 378 221 9 rC
576 382.25 -.25 .25 797.25 382 .25 576 382 @a
gR
gS 0 26 257 521 rC
28 392 :M
f0_9 sf
(Reports possible errors \(uninitialized variables, etc.\) in)S
gR
gS 257 26 280 521 rC
308 392 :M
f0_9 sf
(names, sizes and styles \(e.g. Times, Symbol, Syntax,)S
gR
gS 537 26 260 442 rC
576 398 :M
f1_9 sf
(AsciiCoder.CodeFiles)S
f0_9 sf
( {name} ~)S
gR
gS 0 26 257 521 rC
28 402 :M
f0_9 sf
(the specified program \(see Analyzer.Tool\))S
gR
gS 257 26 280 521 rC
308 402 :M
f0_9 sf
(Palatino, Geneva, 12, 14, 16, bold, italic, plain\). The)S
gR
gS 537 26 260 442 rC
588 409 :M
f0_9 sf
(Merges several Oberon files into a single ASCII text.)S
gR
gS 257 26 280 521 rC
308 412 :M
f0_9 sf
(menu can be used to change the font, size, and style of a)S
gR
gS 537 26 260 442 rC
588 420 :M
f0_9 sf
(Useful to transfer files to another computer.)S
gR
gS 257 26 280 521 rC
308 422 :M
f0_9 sf
(text selection by choosing the appropriate menu item.)S
gR
gS 537 26 260 442 rC
576 431 :M
f1_9 sf
(AsciiCoder.DecodeFiles )S
f0_9 sf
({name} ~)S
gR
gS 257 26 280 521 rC
297 432 :M
f1_9 sf
(StampElems.Insert)S
gR
gS 0 26 257 521 rC
16 435 :M
f1_12 sf
(Find)S
gR
gS 257 26 280 521 rC
308 442 :M
f0_9 sf
(Inserts a date stamp at the caret position. StampElems)S
gR
gS 537 26 260 442 rC
588 442 :M
f0_9 sf
(Recovers the original Oberon files from an asciiencoded)S
gR
gS 16 438 221 9 rC
16 442.25 -.25 .25 237.25 442 .25 16 442 @a
gR
gS 257 26 280 521 rC
308 452 :M
f0_9 sf
(always display the date of the most recent Edit.Store)S
gR
gS 537 26 260 442 rC
588 453 :M
f0_9 sf
(File.)S
gR
gS 0 26 257 521 rC
17 457 :M
f1_9 sf
(Find.Diff)S
f0_9 sf
( )S
gR
gS 257 26 280 521 rC
308 462 :M
f0_9 sf
(operation of this text.)S
gR
gS 0 26 257 521 rC
28 467 :M
f0_9 sf
(Compares two texts starting from the two most recent)S
gR
gS 257 26 280 521 rC
297 472 :M
f1_9 sf
(GraphicElems.Insert)S
gR
gS 0 26 257 521 rC
28 478 :M
f0_9 sf
(selections. Sets new selections at the first position where)S
gR
gS 257 26 280 521 rC
308 482 :M
f0_9 sf
(Inserts an empty picture at the caret position. With an)S
gR
gS 0 26 257 521 rC
28 489 :M
f0_9 sf
(the two texts differ.)S
gR
gS 257 26 280 521 rC
308 492 :M
f0_9 sf
(MM click \(Ctrl\) the picture is shown in a Draw viewer)S
gR
gS 0 26 257 521 rC
17 500 :M
f1_9 sf
(Find.All  ^)S
gR
gS 257 26 280 521 rC
308 502 :M
f0_9 sf
(\(see Draw.Tool and Draw.Text\). After editing the picture)S
gR
gS 0 26 257 521 rC
28 511 :M
f0_9 sf
(Searches the selection in the files specified with)S
gR
gS 257 26 280 521 rC
308 512 :M
f0_9 sf
(it can be restored in the text by executing)S
gR
gS 0 26 257 521 rC
28 522 :M
f0_9 sf
(Find.Domain and lists all lines containing the pattern.)S
gR
gS 257 26 280 521 rC
308 522 :M
f0_9 sf
(GraphicElems.Update from the menu.)S
gR
gS 0 26 257 521 rC
17 533 :M
f1_9 sf
(Find.Domain )S
f0_9 sf
({filename} ~)S
28 544 :M
(Defines the files in which Find.All should search.)S
endp
%%Trailer
end
%%EOF
